#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8035984677720566691) {
   out_8035984677720566691[0] = 0;
   out_8035984677720566691[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8035984677720566691[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8035984677720566691[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8035984677720566691[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8035984677720566691[5] = -sin(in_vec[1]);
   out_8035984677720566691[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8035984677720566691[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8035984677720566691[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8035984677720566691[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8035984677720566691[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8035984677720566691[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8035984677720566691[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8035984677720566691[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8035984677720566691[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8035984677720566691[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8035984677720566691[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8035984677720566691[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8420573368845911328) {
   out_8420573368845911328[0] = delta_x[0] + nom_x[0];
   out_8420573368845911328[1] = delta_x[1] + nom_x[1];
   out_8420573368845911328[2] = delta_x[2] + nom_x[2];
   out_8420573368845911328[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8420573368845911328[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8420573368845911328[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8420573368845911328[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8420573368845911328[7] = delta_x[6] + nom_x[7];
   out_8420573368845911328[8] = delta_x[7] + nom_x[8];
   out_8420573368845911328[9] = delta_x[8] + nom_x[9];
   out_8420573368845911328[10] = delta_x[9] + nom_x[10];
   out_8420573368845911328[11] = delta_x[10] + nom_x[11];
   out_8420573368845911328[12] = delta_x[11] + nom_x[12];
   out_8420573368845911328[13] = delta_x[12] + nom_x[13];
   out_8420573368845911328[14] = delta_x[13] + nom_x[14];
   out_8420573368845911328[15] = delta_x[14] + nom_x[15];
   out_8420573368845911328[16] = delta_x[15] + nom_x[16];
   out_8420573368845911328[17] = delta_x[16] + nom_x[17];
   out_8420573368845911328[18] = delta_x[17] + nom_x[18];
   out_8420573368845911328[19] = delta_x[18] + nom_x[19];
   out_8420573368845911328[20] = delta_x[19] + nom_x[20];
   out_8420573368845911328[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6777199985856691982) {
   out_6777199985856691982[0] = -nom_x[0] + true_x[0];
   out_6777199985856691982[1] = -nom_x[1] + true_x[1];
   out_6777199985856691982[2] = -nom_x[2] + true_x[2];
   out_6777199985856691982[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6777199985856691982[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6777199985856691982[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6777199985856691982[6] = -nom_x[7] + true_x[7];
   out_6777199985856691982[7] = -nom_x[8] + true_x[8];
   out_6777199985856691982[8] = -nom_x[9] + true_x[9];
   out_6777199985856691982[9] = -nom_x[10] + true_x[10];
   out_6777199985856691982[10] = -nom_x[11] + true_x[11];
   out_6777199985856691982[11] = -nom_x[12] + true_x[12];
   out_6777199985856691982[12] = -nom_x[13] + true_x[13];
   out_6777199985856691982[13] = -nom_x[14] + true_x[14];
   out_6777199985856691982[14] = -nom_x[15] + true_x[15];
   out_6777199985856691982[15] = -nom_x[16] + true_x[16];
   out_6777199985856691982[16] = -nom_x[17] + true_x[17];
   out_6777199985856691982[17] = -nom_x[18] + true_x[18];
   out_6777199985856691982[18] = -nom_x[19] + true_x[19];
   out_6777199985856691982[19] = -nom_x[20] + true_x[20];
   out_6777199985856691982[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7266160212655929723) {
   out_7266160212655929723[0] = 1.0;
   out_7266160212655929723[1] = 0;
   out_7266160212655929723[2] = 0;
   out_7266160212655929723[3] = 0;
   out_7266160212655929723[4] = 0;
   out_7266160212655929723[5] = 0;
   out_7266160212655929723[6] = 0;
   out_7266160212655929723[7] = 0;
   out_7266160212655929723[8] = 0;
   out_7266160212655929723[9] = 0;
   out_7266160212655929723[10] = 0;
   out_7266160212655929723[11] = 0;
   out_7266160212655929723[12] = 0;
   out_7266160212655929723[13] = 0;
   out_7266160212655929723[14] = 0;
   out_7266160212655929723[15] = 0;
   out_7266160212655929723[16] = 0;
   out_7266160212655929723[17] = 0;
   out_7266160212655929723[18] = 0;
   out_7266160212655929723[19] = 0;
   out_7266160212655929723[20] = 0;
   out_7266160212655929723[21] = 0;
   out_7266160212655929723[22] = 1.0;
   out_7266160212655929723[23] = 0;
   out_7266160212655929723[24] = 0;
   out_7266160212655929723[25] = 0;
   out_7266160212655929723[26] = 0;
   out_7266160212655929723[27] = 0;
   out_7266160212655929723[28] = 0;
   out_7266160212655929723[29] = 0;
   out_7266160212655929723[30] = 0;
   out_7266160212655929723[31] = 0;
   out_7266160212655929723[32] = 0;
   out_7266160212655929723[33] = 0;
   out_7266160212655929723[34] = 0;
   out_7266160212655929723[35] = 0;
   out_7266160212655929723[36] = 0;
   out_7266160212655929723[37] = 0;
   out_7266160212655929723[38] = 0;
   out_7266160212655929723[39] = 0;
   out_7266160212655929723[40] = 0;
   out_7266160212655929723[41] = 0;
   out_7266160212655929723[42] = 0;
   out_7266160212655929723[43] = 0;
   out_7266160212655929723[44] = 1.0;
   out_7266160212655929723[45] = 0;
   out_7266160212655929723[46] = 0;
   out_7266160212655929723[47] = 0;
   out_7266160212655929723[48] = 0;
   out_7266160212655929723[49] = 0;
   out_7266160212655929723[50] = 0;
   out_7266160212655929723[51] = 0;
   out_7266160212655929723[52] = 0;
   out_7266160212655929723[53] = 0;
   out_7266160212655929723[54] = 0;
   out_7266160212655929723[55] = 0;
   out_7266160212655929723[56] = 0;
   out_7266160212655929723[57] = 0;
   out_7266160212655929723[58] = 0;
   out_7266160212655929723[59] = 0;
   out_7266160212655929723[60] = 0;
   out_7266160212655929723[61] = 0;
   out_7266160212655929723[62] = 0;
   out_7266160212655929723[63] = 0;
   out_7266160212655929723[64] = 0;
   out_7266160212655929723[65] = 0;
   out_7266160212655929723[66] = -0.5*state[4];
   out_7266160212655929723[67] = -0.5*state[5];
   out_7266160212655929723[68] = -0.5*state[6];
   out_7266160212655929723[69] = 0;
   out_7266160212655929723[70] = 0;
   out_7266160212655929723[71] = 0;
   out_7266160212655929723[72] = 0;
   out_7266160212655929723[73] = 0;
   out_7266160212655929723[74] = 0;
   out_7266160212655929723[75] = 0;
   out_7266160212655929723[76] = 0;
   out_7266160212655929723[77] = 0;
   out_7266160212655929723[78] = 0;
   out_7266160212655929723[79] = 0;
   out_7266160212655929723[80] = 0;
   out_7266160212655929723[81] = 0;
   out_7266160212655929723[82] = 0;
   out_7266160212655929723[83] = 0;
   out_7266160212655929723[84] = 0;
   out_7266160212655929723[85] = 0;
   out_7266160212655929723[86] = 0;
   out_7266160212655929723[87] = 0.5*state[3];
   out_7266160212655929723[88] = 0.5*state[6];
   out_7266160212655929723[89] = -0.5*state[5];
   out_7266160212655929723[90] = 0;
   out_7266160212655929723[91] = 0;
   out_7266160212655929723[92] = 0;
   out_7266160212655929723[93] = 0;
   out_7266160212655929723[94] = 0;
   out_7266160212655929723[95] = 0;
   out_7266160212655929723[96] = 0;
   out_7266160212655929723[97] = 0;
   out_7266160212655929723[98] = 0;
   out_7266160212655929723[99] = 0;
   out_7266160212655929723[100] = 0;
   out_7266160212655929723[101] = 0;
   out_7266160212655929723[102] = 0;
   out_7266160212655929723[103] = 0;
   out_7266160212655929723[104] = 0;
   out_7266160212655929723[105] = 0;
   out_7266160212655929723[106] = 0;
   out_7266160212655929723[107] = 0;
   out_7266160212655929723[108] = -0.5*state[6];
   out_7266160212655929723[109] = 0.5*state[3];
   out_7266160212655929723[110] = 0.5*state[4];
   out_7266160212655929723[111] = 0;
   out_7266160212655929723[112] = 0;
   out_7266160212655929723[113] = 0;
   out_7266160212655929723[114] = 0;
   out_7266160212655929723[115] = 0;
   out_7266160212655929723[116] = 0;
   out_7266160212655929723[117] = 0;
   out_7266160212655929723[118] = 0;
   out_7266160212655929723[119] = 0;
   out_7266160212655929723[120] = 0;
   out_7266160212655929723[121] = 0;
   out_7266160212655929723[122] = 0;
   out_7266160212655929723[123] = 0;
   out_7266160212655929723[124] = 0;
   out_7266160212655929723[125] = 0;
   out_7266160212655929723[126] = 0;
   out_7266160212655929723[127] = 0;
   out_7266160212655929723[128] = 0;
   out_7266160212655929723[129] = 0.5*state[5];
   out_7266160212655929723[130] = -0.5*state[4];
   out_7266160212655929723[131] = 0.5*state[3];
   out_7266160212655929723[132] = 0;
   out_7266160212655929723[133] = 0;
   out_7266160212655929723[134] = 0;
   out_7266160212655929723[135] = 0;
   out_7266160212655929723[136] = 0;
   out_7266160212655929723[137] = 0;
   out_7266160212655929723[138] = 0;
   out_7266160212655929723[139] = 0;
   out_7266160212655929723[140] = 0;
   out_7266160212655929723[141] = 0;
   out_7266160212655929723[142] = 0;
   out_7266160212655929723[143] = 0;
   out_7266160212655929723[144] = 0;
   out_7266160212655929723[145] = 0;
   out_7266160212655929723[146] = 0;
   out_7266160212655929723[147] = 0;
   out_7266160212655929723[148] = 0;
   out_7266160212655929723[149] = 0;
   out_7266160212655929723[150] = 0;
   out_7266160212655929723[151] = 0;
   out_7266160212655929723[152] = 0;
   out_7266160212655929723[153] = 1.0;
   out_7266160212655929723[154] = 0;
   out_7266160212655929723[155] = 0;
   out_7266160212655929723[156] = 0;
   out_7266160212655929723[157] = 0;
   out_7266160212655929723[158] = 0;
   out_7266160212655929723[159] = 0;
   out_7266160212655929723[160] = 0;
   out_7266160212655929723[161] = 0;
   out_7266160212655929723[162] = 0;
   out_7266160212655929723[163] = 0;
   out_7266160212655929723[164] = 0;
   out_7266160212655929723[165] = 0;
   out_7266160212655929723[166] = 0;
   out_7266160212655929723[167] = 0;
   out_7266160212655929723[168] = 0;
   out_7266160212655929723[169] = 0;
   out_7266160212655929723[170] = 0;
   out_7266160212655929723[171] = 0;
   out_7266160212655929723[172] = 0;
   out_7266160212655929723[173] = 0;
   out_7266160212655929723[174] = 0;
   out_7266160212655929723[175] = 1.0;
   out_7266160212655929723[176] = 0;
   out_7266160212655929723[177] = 0;
   out_7266160212655929723[178] = 0;
   out_7266160212655929723[179] = 0;
   out_7266160212655929723[180] = 0;
   out_7266160212655929723[181] = 0;
   out_7266160212655929723[182] = 0;
   out_7266160212655929723[183] = 0;
   out_7266160212655929723[184] = 0;
   out_7266160212655929723[185] = 0;
   out_7266160212655929723[186] = 0;
   out_7266160212655929723[187] = 0;
   out_7266160212655929723[188] = 0;
   out_7266160212655929723[189] = 0;
   out_7266160212655929723[190] = 0;
   out_7266160212655929723[191] = 0;
   out_7266160212655929723[192] = 0;
   out_7266160212655929723[193] = 0;
   out_7266160212655929723[194] = 0;
   out_7266160212655929723[195] = 0;
   out_7266160212655929723[196] = 0;
   out_7266160212655929723[197] = 1.0;
   out_7266160212655929723[198] = 0;
   out_7266160212655929723[199] = 0;
   out_7266160212655929723[200] = 0;
   out_7266160212655929723[201] = 0;
   out_7266160212655929723[202] = 0;
   out_7266160212655929723[203] = 0;
   out_7266160212655929723[204] = 0;
   out_7266160212655929723[205] = 0;
   out_7266160212655929723[206] = 0;
   out_7266160212655929723[207] = 0;
   out_7266160212655929723[208] = 0;
   out_7266160212655929723[209] = 0;
   out_7266160212655929723[210] = 0;
   out_7266160212655929723[211] = 0;
   out_7266160212655929723[212] = 0;
   out_7266160212655929723[213] = 0;
   out_7266160212655929723[214] = 0;
   out_7266160212655929723[215] = 0;
   out_7266160212655929723[216] = 0;
   out_7266160212655929723[217] = 0;
   out_7266160212655929723[218] = 0;
   out_7266160212655929723[219] = 1.0;
   out_7266160212655929723[220] = 0;
   out_7266160212655929723[221] = 0;
   out_7266160212655929723[222] = 0;
   out_7266160212655929723[223] = 0;
   out_7266160212655929723[224] = 0;
   out_7266160212655929723[225] = 0;
   out_7266160212655929723[226] = 0;
   out_7266160212655929723[227] = 0;
   out_7266160212655929723[228] = 0;
   out_7266160212655929723[229] = 0;
   out_7266160212655929723[230] = 0;
   out_7266160212655929723[231] = 0;
   out_7266160212655929723[232] = 0;
   out_7266160212655929723[233] = 0;
   out_7266160212655929723[234] = 0;
   out_7266160212655929723[235] = 0;
   out_7266160212655929723[236] = 0;
   out_7266160212655929723[237] = 0;
   out_7266160212655929723[238] = 0;
   out_7266160212655929723[239] = 0;
   out_7266160212655929723[240] = 0;
   out_7266160212655929723[241] = 1.0;
   out_7266160212655929723[242] = 0;
   out_7266160212655929723[243] = 0;
   out_7266160212655929723[244] = 0;
   out_7266160212655929723[245] = 0;
   out_7266160212655929723[246] = 0;
   out_7266160212655929723[247] = 0;
   out_7266160212655929723[248] = 0;
   out_7266160212655929723[249] = 0;
   out_7266160212655929723[250] = 0;
   out_7266160212655929723[251] = 0;
   out_7266160212655929723[252] = 0;
   out_7266160212655929723[253] = 0;
   out_7266160212655929723[254] = 0;
   out_7266160212655929723[255] = 0;
   out_7266160212655929723[256] = 0;
   out_7266160212655929723[257] = 0;
   out_7266160212655929723[258] = 0;
   out_7266160212655929723[259] = 0;
   out_7266160212655929723[260] = 0;
   out_7266160212655929723[261] = 0;
   out_7266160212655929723[262] = 0;
   out_7266160212655929723[263] = 1.0;
   out_7266160212655929723[264] = 0;
   out_7266160212655929723[265] = 0;
   out_7266160212655929723[266] = 0;
   out_7266160212655929723[267] = 0;
   out_7266160212655929723[268] = 0;
   out_7266160212655929723[269] = 0;
   out_7266160212655929723[270] = 0;
   out_7266160212655929723[271] = 0;
   out_7266160212655929723[272] = 0;
   out_7266160212655929723[273] = 0;
   out_7266160212655929723[274] = 0;
   out_7266160212655929723[275] = 0;
   out_7266160212655929723[276] = 0;
   out_7266160212655929723[277] = 0;
   out_7266160212655929723[278] = 0;
   out_7266160212655929723[279] = 0;
   out_7266160212655929723[280] = 0;
   out_7266160212655929723[281] = 0;
   out_7266160212655929723[282] = 0;
   out_7266160212655929723[283] = 0;
   out_7266160212655929723[284] = 0;
   out_7266160212655929723[285] = 1.0;
   out_7266160212655929723[286] = 0;
   out_7266160212655929723[287] = 0;
   out_7266160212655929723[288] = 0;
   out_7266160212655929723[289] = 0;
   out_7266160212655929723[290] = 0;
   out_7266160212655929723[291] = 0;
   out_7266160212655929723[292] = 0;
   out_7266160212655929723[293] = 0;
   out_7266160212655929723[294] = 0;
   out_7266160212655929723[295] = 0;
   out_7266160212655929723[296] = 0;
   out_7266160212655929723[297] = 0;
   out_7266160212655929723[298] = 0;
   out_7266160212655929723[299] = 0;
   out_7266160212655929723[300] = 0;
   out_7266160212655929723[301] = 0;
   out_7266160212655929723[302] = 0;
   out_7266160212655929723[303] = 0;
   out_7266160212655929723[304] = 0;
   out_7266160212655929723[305] = 0;
   out_7266160212655929723[306] = 0;
   out_7266160212655929723[307] = 1.0;
   out_7266160212655929723[308] = 0;
   out_7266160212655929723[309] = 0;
   out_7266160212655929723[310] = 0;
   out_7266160212655929723[311] = 0;
   out_7266160212655929723[312] = 0;
   out_7266160212655929723[313] = 0;
   out_7266160212655929723[314] = 0;
   out_7266160212655929723[315] = 0;
   out_7266160212655929723[316] = 0;
   out_7266160212655929723[317] = 0;
   out_7266160212655929723[318] = 0;
   out_7266160212655929723[319] = 0;
   out_7266160212655929723[320] = 0;
   out_7266160212655929723[321] = 0;
   out_7266160212655929723[322] = 0;
   out_7266160212655929723[323] = 0;
   out_7266160212655929723[324] = 0;
   out_7266160212655929723[325] = 0;
   out_7266160212655929723[326] = 0;
   out_7266160212655929723[327] = 0;
   out_7266160212655929723[328] = 0;
   out_7266160212655929723[329] = 1.0;
   out_7266160212655929723[330] = 0;
   out_7266160212655929723[331] = 0;
   out_7266160212655929723[332] = 0;
   out_7266160212655929723[333] = 0;
   out_7266160212655929723[334] = 0;
   out_7266160212655929723[335] = 0;
   out_7266160212655929723[336] = 0;
   out_7266160212655929723[337] = 0;
   out_7266160212655929723[338] = 0;
   out_7266160212655929723[339] = 0;
   out_7266160212655929723[340] = 0;
   out_7266160212655929723[341] = 0;
   out_7266160212655929723[342] = 0;
   out_7266160212655929723[343] = 0;
   out_7266160212655929723[344] = 0;
   out_7266160212655929723[345] = 0;
   out_7266160212655929723[346] = 0;
   out_7266160212655929723[347] = 0;
   out_7266160212655929723[348] = 0;
   out_7266160212655929723[349] = 0;
   out_7266160212655929723[350] = 0;
   out_7266160212655929723[351] = 1.0;
   out_7266160212655929723[352] = 0;
   out_7266160212655929723[353] = 0;
   out_7266160212655929723[354] = 0;
   out_7266160212655929723[355] = 0;
   out_7266160212655929723[356] = 0;
   out_7266160212655929723[357] = 0;
   out_7266160212655929723[358] = 0;
   out_7266160212655929723[359] = 0;
   out_7266160212655929723[360] = 0;
   out_7266160212655929723[361] = 0;
   out_7266160212655929723[362] = 0;
   out_7266160212655929723[363] = 0;
   out_7266160212655929723[364] = 0;
   out_7266160212655929723[365] = 0;
   out_7266160212655929723[366] = 0;
   out_7266160212655929723[367] = 0;
   out_7266160212655929723[368] = 0;
   out_7266160212655929723[369] = 0;
   out_7266160212655929723[370] = 0;
   out_7266160212655929723[371] = 0;
   out_7266160212655929723[372] = 0;
   out_7266160212655929723[373] = 1.0;
   out_7266160212655929723[374] = 0;
   out_7266160212655929723[375] = 0;
   out_7266160212655929723[376] = 0;
   out_7266160212655929723[377] = 0;
   out_7266160212655929723[378] = 0;
   out_7266160212655929723[379] = 0;
   out_7266160212655929723[380] = 0;
   out_7266160212655929723[381] = 0;
   out_7266160212655929723[382] = 0;
   out_7266160212655929723[383] = 0;
   out_7266160212655929723[384] = 0;
   out_7266160212655929723[385] = 0;
   out_7266160212655929723[386] = 0;
   out_7266160212655929723[387] = 0;
   out_7266160212655929723[388] = 0;
   out_7266160212655929723[389] = 0;
   out_7266160212655929723[390] = 0;
   out_7266160212655929723[391] = 0;
   out_7266160212655929723[392] = 0;
   out_7266160212655929723[393] = 0;
   out_7266160212655929723[394] = 0;
   out_7266160212655929723[395] = 1.0;
   out_7266160212655929723[396] = 0;
   out_7266160212655929723[397] = 0;
   out_7266160212655929723[398] = 0;
   out_7266160212655929723[399] = 0;
   out_7266160212655929723[400] = 0;
   out_7266160212655929723[401] = 0;
   out_7266160212655929723[402] = 0;
   out_7266160212655929723[403] = 0;
   out_7266160212655929723[404] = 0;
   out_7266160212655929723[405] = 0;
   out_7266160212655929723[406] = 0;
   out_7266160212655929723[407] = 0;
   out_7266160212655929723[408] = 0;
   out_7266160212655929723[409] = 0;
   out_7266160212655929723[410] = 0;
   out_7266160212655929723[411] = 0;
   out_7266160212655929723[412] = 0;
   out_7266160212655929723[413] = 0;
   out_7266160212655929723[414] = 0;
   out_7266160212655929723[415] = 0;
   out_7266160212655929723[416] = 0;
   out_7266160212655929723[417] = 1.0;
   out_7266160212655929723[418] = 0;
   out_7266160212655929723[419] = 0;
   out_7266160212655929723[420] = 0;
   out_7266160212655929723[421] = 0;
   out_7266160212655929723[422] = 0;
   out_7266160212655929723[423] = 0;
   out_7266160212655929723[424] = 0;
   out_7266160212655929723[425] = 0;
   out_7266160212655929723[426] = 0;
   out_7266160212655929723[427] = 0;
   out_7266160212655929723[428] = 0;
   out_7266160212655929723[429] = 0;
   out_7266160212655929723[430] = 0;
   out_7266160212655929723[431] = 0;
   out_7266160212655929723[432] = 0;
   out_7266160212655929723[433] = 0;
   out_7266160212655929723[434] = 0;
   out_7266160212655929723[435] = 0;
   out_7266160212655929723[436] = 0;
   out_7266160212655929723[437] = 0;
   out_7266160212655929723[438] = 0;
   out_7266160212655929723[439] = 1.0;
   out_7266160212655929723[440] = 0;
   out_7266160212655929723[441] = 0;
   out_7266160212655929723[442] = 0;
   out_7266160212655929723[443] = 0;
   out_7266160212655929723[444] = 0;
   out_7266160212655929723[445] = 0;
   out_7266160212655929723[446] = 0;
   out_7266160212655929723[447] = 0;
   out_7266160212655929723[448] = 0;
   out_7266160212655929723[449] = 0;
   out_7266160212655929723[450] = 0;
   out_7266160212655929723[451] = 0;
   out_7266160212655929723[452] = 0;
   out_7266160212655929723[453] = 0;
   out_7266160212655929723[454] = 0;
   out_7266160212655929723[455] = 0;
   out_7266160212655929723[456] = 0;
   out_7266160212655929723[457] = 0;
   out_7266160212655929723[458] = 0;
   out_7266160212655929723[459] = 0;
   out_7266160212655929723[460] = 0;
   out_7266160212655929723[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_685833055220742968) {
   out_685833055220742968[0] = dt*state[7] + state[0];
   out_685833055220742968[1] = dt*state[8] + state[1];
   out_685833055220742968[2] = dt*state[9] + state[2];
   out_685833055220742968[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_685833055220742968[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_685833055220742968[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_685833055220742968[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_685833055220742968[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_685833055220742968[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_685833055220742968[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_685833055220742968[10] = state[10];
   out_685833055220742968[11] = state[11];
   out_685833055220742968[12] = state[12];
   out_685833055220742968[13] = state[13];
   out_685833055220742968[14] = state[14];
   out_685833055220742968[15] = state[15];
   out_685833055220742968[16] = state[16];
   out_685833055220742968[17] = state[17];
   out_685833055220742968[18] = state[18];
   out_685833055220742968[19] = state[19];
   out_685833055220742968[20] = state[20];
   out_685833055220742968[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6925511053866020455) {
   out_6925511053866020455[0] = 1;
   out_6925511053866020455[1] = 0;
   out_6925511053866020455[2] = 0;
   out_6925511053866020455[3] = 0;
   out_6925511053866020455[4] = 0;
   out_6925511053866020455[5] = 0;
   out_6925511053866020455[6] = dt;
   out_6925511053866020455[7] = 0;
   out_6925511053866020455[8] = 0;
   out_6925511053866020455[9] = 0;
   out_6925511053866020455[10] = 0;
   out_6925511053866020455[11] = 0;
   out_6925511053866020455[12] = 0;
   out_6925511053866020455[13] = 0;
   out_6925511053866020455[14] = 0;
   out_6925511053866020455[15] = 0;
   out_6925511053866020455[16] = 0;
   out_6925511053866020455[17] = 0;
   out_6925511053866020455[18] = 0;
   out_6925511053866020455[19] = 0;
   out_6925511053866020455[20] = 0;
   out_6925511053866020455[21] = 0;
   out_6925511053866020455[22] = 1;
   out_6925511053866020455[23] = 0;
   out_6925511053866020455[24] = 0;
   out_6925511053866020455[25] = 0;
   out_6925511053866020455[26] = 0;
   out_6925511053866020455[27] = 0;
   out_6925511053866020455[28] = dt;
   out_6925511053866020455[29] = 0;
   out_6925511053866020455[30] = 0;
   out_6925511053866020455[31] = 0;
   out_6925511053866020455[32] = 0;
   out_6925511053866020455[33] = 0;
   out_6925511053866020455[34] = 0;
   out_6925511053866020455[35] = 0;
   out_6925511053866020455[36] = 0;
   out_6925511053866020455[37] = 0;
   out_6925511053866020455[38] = 0;
   out_6925511053866020455[39] = 0;
   out_6925511053866020455[40] = 0;
   out_6925511053866020455[41] = 0;
   out_6925511053866020455[42] = 0;
   out_6925511053866020455[43] = 0;
   out_6925511053866020455[44] = 1;
   out_6925511053866020455[45] = 0;
   out_6925511053866020455[46] = 0;
   out_6925511053866020455[47] = 0;
   out_6925511053866020455[48] = 0;
   out_6925511053866020455[49] = 0;
   out_6925511053866020455[50] = dt;
   out_6925511053866020455[51] = 0;
   out_6925511053866020455[52] = 0;
   out_6925511053866020455[53] = 0;
   out_6925511053866020455[54] = 0;
   out_6925511053866020455[55] = 0;
   out_6925511053866020455[56] = 0;
   out_6925511053866020455[57] = 0;
   out_6925511053866020455[58] = 0;
   out_6925511053866020455[59] = 0;
   out_6925511053866020455[60] = 0;
   out_6925511053866020455[61] = 0;
   out_6925511053866020455[62] = 0;
   out_6925511053866020455[63] = 0;
   out_6925511053866020455[64] = 0;
   out_6925511053866020455[65] = 0;
   out_6925511053866020455[66] = 1;
   out_6925511053866020455[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6925511053866020455[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6925511053866020455[69] = 0;
   out_6925511053866020455[70] = 0;
   out_6925511053866020455[71] = 0;
   out_6925511053866020455[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6925511053866020455[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6925511053866020455[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6925511053866020455[75] = 0;
   out_6925511053866020455[76] = 0;
   out_6925511053866020455[77] = 0;
   out_6925511053866020455[78] = 0;
   out_6925511053866020455[79] = 0;
   out_6925511053866020455[80] = 0;
   out_6925511053866020455[81] = 0;
   out_6925511053866020455[82] = 0;
   out_6925511053866020455[83] = 0;
   out_6925511053866020455[84] = 0;
   out_6925511053866020455[85] = 0;
   out_6925511053866020455[86] = 0;
   out_6925511053866020455[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6925511053866020455[88] = 1;
   out_6925511053866020455[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6925511053866020455[90] = 0;
   out_6925511053866020455[91] = 0;
   out_6925511053866020455[92] = 0;
   out_6925511053866020455[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6925511053866020455[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6925511053866020455[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6925511053866020455[96] = 0;
   out_6925511053866020455[97] = 0;
   out_6925511053866020455[98] = 0;
   out_6925511053866020455[99] = 0;
   out_6925511053866020455[100] = 0;
   out_6925511053866020455[101] = 0;
   out_6925511053866020455[102] = 0;
   out_6925511053866020455[103] = 0;
   out_6925511053866020455[104] = 0;
   out_6925511053866020455[105] = 0;
   out_6925511053866020455[106] = 0;
   out_6925511053866020455[107] = 0;
   out_6925511053866020455[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6925511053866020455[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6925511053866020455[110] = 1;
   out_6925511053866020455[111] = 0;
   out_6925511053866020455[112] = 0;
   out_6925511053866020455[113] = 0;
   out_6925511053866020455[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6925511053866020455[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6925511053866020455[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6925511053866020455[117] = 0;
   out_6925511053866020455[118] = 0;
   out_6925511053866020455[119] = 0;
   out_6925511053866020455[120] = 0;
   out_6925511053866020455[121] = 0;
   out_6925511053866020455[122] = 0;
   out_6925511053866020455[123] = 0;
   out_6925511053866020455[124] = 0;
   out_6925511053866020455[125] = 0;
   out_6925511053866020455[126] = 0;
   out_6925511053866020455[127] = 0;
   out_6925511053866020455[128] = 0;
   out_6925511053866020455[129] = 0;
   out_6925511053866020455[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6925511053866020455[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6925511053866020455[132] = 1;
   out_6925511053866020455[133] = 0;
   out_6925511053866020455[134] = 0;
   out_6925511053866020455[135] = 0;
   out_6925511053866020455[136] = 0;
   out_6925511053866020455[137] = 0;
   out_6925511053866020455[138] = 0;
   out_6925511053866020455[139] = 0;
   out_6925511053866020455[140] = 0;
   out_6925511053866020455[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6925511053866020455[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6925511053866020455[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6925511053866020455[144] = 0;
   out_6925511053866020455[145] = 0;
   out_6925511053866020455[146] = 0;
   out_6925511053866020455[147] = 0;
   out_6925511053866020455[148] = 0;
   out_6925511053866020455[149] = 0;
   out_6925511053866020455[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6925511053866020455[151] = 0;
   out_6925511053866020455[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6925511053866020455[153] = 0;
   out_6925511053866020455[154] = 1;
   out_6925511053866020455[155] = 0;
   out_6925511053866020455[156] = 0;
   out_6925511053866020455[157] = 0;
   out_6925511053866020455[158] = 0;
   out_6925511053866020455[159] = 0;
   out_6925511053866020455[160] = 0;
   out_6925511053866020455[161] = 0;
   out_6925511053866020455[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6925511053866020455[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6925511053866020455[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6925511053866020455[165] = 0;
   out_6925511053866020455[166] = 0;
   out_6925511053866020455[167] = 0;
   out_6925511053866020455[168] = 0;
   out_6925511053866020455[169] = 0;
   out_6925511053866020455[170] = 0;
   out_6925511053866020455[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6925511053866020455[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6925511053866020455[173] = 0;
   out_6925511053866020455[174] = 0;
   out_6925511053866020455[175] = 0;
   out_6925511053866020455[176] = 1;
   out_6925511053866020455[177] = 0;
   out_6925511053866020455[178] = 0;
   out_6925511053866020455[179] = 0;
   out_6925511053866020455[180] = 0;
   out_6925511053866020455[181] = 0;
   out_6925511053866020455[182] = 0;
   out_6925511053866020455[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6925511053866020455[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6925511053866020455[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6925511053866020455[186] = 0;
   out_6925511053866020455[187] = 0;
   out_6925511053866020455[188] = 0;
   out_6925511053866020455[189] = 0;
   out_6925511053866020455[190] = 0;
   out_6925511053866020455[191] = 0;
   out_6925511053866020455[192] = 0;
   out_6925511053866020455[193] = 0;
   out_6925511053866020455[194] = 0;
   out_6925511053866020455[195] = 0;
   out_6925511053866020455[196] = 0;
   out_6925511053866020455[197] = 0;
   out_6925511053866020455[198] = 1;
   out_6925511053866020455[199] = 0;
   out_6925511053866020455[200] = 0;
   out_6925511053866020455[201] = 0;
   out_6925511053866020455[202] = 0;
   out_6925511053866020455[203] = 0;
   out_6925511053866020455[204] = 0;
   out_6925511053866020455[205] = 0;
   out_6925511053866020455[206] = 0;
   out_6925511053866020455[207] = 0;
   out_6925511053866020455[208] = 0;
   out_6925511053866020455[209] = 0;
   out_6925511053866020455[210] = 0;
   out_6925511053866020455[211] = 0;
   out_6925511053866020455[212] = 0;
   out_6925511053866020455[213] = 0;
   out_6925511053866020455[214] = 0;
   out_6925511053866020455[215] = 0;
   out_6925511053866020455[216] = 0;
   out_6925511053866020455[217] = 0;
   out_6925511053866020455[218] = 0;
   out_6925511053866020455[219] = 0;
   out_6925511053866020455[220] = 1;
   out_6925511053866020455[221] = 0;
   out_6925511053866020455[222] = 0;
   out_6925511053866020455[223] = 0;
   out_6925511053866020455[224] = 0;
   out_6925511053866020455[225] = 0;
   out_6925511053866020455[226] = 0;
   out_6925511053866020455[227] = 0;
   out_6925511053866020455[228] = 0;
   out_6925511053866020455[229] = 0;
   out_6925511053866020455[230] = 0;
   out_6925511053866020455[231] = 0;
   out_6925511053866020455[232] = 0;
   out_6925511053866020455[233] = 0;
   out_6925511053866020455[234] = 0;
   out_6925511053866020455[235] = 0;
   out_6925511053866020455[236] = 0;
   out_6925511053866020455[237] = 0;
   out_6925511053866020455[238] = 0;
   out_6925511053866020455[239] = 0;
   out_6925511053866020455[240] = 0;
   out_6925511053866020455[241] = 0;
   out_6925511053866020455[242] = 1;
   out_6925511053866020455[243] = 0;
   out_6925511053866020455[244] = 0;
   out_6925511053866020455[245] = 0;
   out_6925511053866020455[246] = 0;
   out_6925511053866020455[247] = 0;
   out_6925511053866020455[248] = 0;
   out_6925511053866020455[249] = 0;
   out_6925511053866020455[250] = 0;
   out_6925511053866020455[251] = 0;
   out_6925511053866020455[252] = 0;
   out_6925511053866020455[253] = 0;
   out_6925511053866020455[254] = 0;
   out_6925511053866020455[255] = 0;
   out_6925511053866020455[256] = 0;
   out_6925511053866020455[257] = 0;
   out_6925511053866020455[258] = 0;
   out_6925511053866020455[259] = 0;
   out_6925511053866020455[260] = 0;
   out_6925511053866020455[261] = 0;
   out_6925511053866020455[262] = 0;
   out_6925511053866020455[263] = 0;
   out_6925511053866020455[264] = 1;
   out_6925511053866020455[265] = 0;
   out_6925511053866020455[266] = 0;
   out_6925511053866020455[267] = 0;
   out_6925511053866020455[268] = 0;
   out_6925511053866020455[269] = 0;
   out_6925511053866020455[270] = 0;
   out_6925511053866020455[271] = 0;
   out_6925511053866020455[272] = 0;
   out_6925511053866020455[273] = 0;
   out_6925511053866020455[274] = 0;
   out_6925511053866020455[275] = 0;
   out_6925511053866020455[276] = 0;
   out_6925511053866020455[277] = 0;
   out_6925511053866020455[278] = 0;
   out_6925511053866020455[279] = 0;
   out_6925511053866020455[280] = 0;
   out_6925511053866020455[281] = 0;
   out_6925511053866020455[282] = 0;
   out_6925511053866020455[283] = 0;
   out_6925511053866020455[284] = 0;
   out_6925511053866020455[285] = 0;
   out_6925511053866020455[286] = 1;
   out_6925511053866020455[287] = 0;
   out_6925511053866020455[288] = 0;
   out_6925511053866020455[289] = 0;
   out_6925511053866020455[290] = 0;
   out_6925511053866020455[291] = 0;
   out_6925511053866020455[292] = 0;
   out_6925511053866020455[293] = 0;
   out_6925511053866020455[294] = 0;
   out_6925511053866020455[295] = 0;
   out_6925511053866020455[296] = 0;
   out_6925511053866020455[297] = 0;
   out_6925511053866020455[298] = 0;
   out_6925511053866020455[299] = 0;
   out_6925511053866020455[300] = 0;
   out_6925511053866020455[301] = 0;
   out_6925511053866020455[302] = 0;
   out_6925511053866020455[303] = 0;
   out_6925511053866020455[304] = 0;
   out_6925511053866020455[305] = 0;
   out_6925511053866020455[306] = 0;
   out_6925511053866020455[307] = 0;
   out_6925511053866020455[308] = 1;
   out_6925511053866020455[309] = 0;
   out_6925511053866020455[310] = 0;
   out_6925511053866020455[311] = 0;
   out_6925511053866020455[312] = 0;
   out_6925511053866020455[313] = 0;
   out_6925511053866020455[314] = 0;
   out_6925511053866020455[315] = 0;
   out_6925511053866020455[316] = 0;
   out_6925511053866020455[317] = 0;
   out_6925511053866020455[318] = 0;
   out_6925511053866020455[319] = 0;
   out_6925511053866020455[320] = 0;
   out_6925511053866020455[321] = 0;
   out_6925511053866020455[322] = 0;
   out_6925511053866020455[323] = 0;
   out_6925511053866020455[324] = 0;
   out_6925511053866020455[325] = 0;
   out_6925511053866020455[326] = 0;
   out_6925511053866020455[327] = 0;
   out_6925511053866020455[328] = 0;
   out_6925511053866020455[329] = 0;
   out_6925511053866020455[330] = 1;
   out_6925511053866020455[331] = 0;
   out_6925511053866020455[332] = 0;
   out_6925511053866020455[333] = 0;
   out_6925511053866020455[334] = 0;
   out_6925511053866020455[335] = 0;
   out_6925511053866020455[336] = 0;
   out_6925511053866020455[337] = 0;
   out_6925511053866020455[338] = 0;
   out_6925511053866020455[339] = 0;
   out_6925511053866020455[340] = 0;
   out_6925511053866020455[341] = 0;
   out_6925511053866020455[342] = 0;
   out_6925511053866020455[343] = 0;
   out_6925511053866020455[344] = 0;
   out_6925511053866020455[345] = 0;
   out_6925511053866020455[346] = 0;
   out_6925511053866020455[347] = 0;
   out_6925511053866020455[348] = 0;
   out_6925511053866020455[349] = 0;
   out_6925511053866020455[350] = 0;
   out_6925511053866020455[351] = 0;
   out_6925511053866020455[352] = 1;
   out_6925511053866020455[353] = 0;
   out_6925511053866020455[354] = 0;
   out_6925511053866020455[355] = 0;
   out_6925511053866020455[356] = 0;
   out_6925511053866020455[357] = 0;
   out_6925511053866020455[358] = 0;
   out_6925511053866020455[359] = 0;
   out_6925511053866020455[360] = 0;
   out_6925511053866020455[361] = 0;
   out_6925511053866020455[362] = 0;
   out_6925511053866020455[363] = 0;
   out_6925511053866020455[364] = 0;
   out_6925511053866020455[365] = 0;
   out_6925511053866020455[366] = 0;
   out_6925511053866020455[367] = 0;
   out_6925511053866020455[368] = 0;
   out_6925511053866020455[369] = 0;
   out_6925511053866020455[370] = 0;
   out_6925511053866020455[371] = 0;
   out_6925511053866020455[372] = 0;
   out_6925511053866020455[373] = 0;
   out_6925511053866020455[374] = 1;
   out_6925511053866020455[375] = 0;
   out_6925511053866020455[376] = 0;
   out_6925511053866020455[377] = 0;
   out_6925511053866020455[378] = 0;
   out_6925511053866020455[379] = 0;
   out_6925511053866020455[380] = 0;
   out_6925511053866020455[381] = 0;
   out_6925511053866020455[382] = 0;
   out_6925511053866020455[383] = 0;
   out_6925511053866020455[384] = 0;
   out_6925511053866020455[385] = 0;
   out_6925511053866020455[386] = 0;
   out_6925511053866020455[387] = 0;
   out_6925511053866020455[388] = 0;
   out_6925511053866020455[389] = 0;
   out_6925511053866020455[390] = 0;
   out_6925511053866020455[391] = 0;
   out_6925511053866020455[392] = 0;
   out_6925511053866020455[393] = 0;
   out_6925511053866020455[394] = 0;
   out_6925511053866020455[395] = 0;
   out_6925511053866020455[396] = 1;
   out_6925511053866020455[397] = 0;
   out_6925511053866020455[398] = 0;
   out_6925511053866020455[399] = 0;
   out_6925511053866020455[400] = 0;
   out_6925511053866020455[401] = 0;
   out_6925511053866020455[402] = 0;
   out_6925511053866020455[403] = 0;
   out_6925511053866020455[404] = 0;
   out_6925511053866020455[405] = 0;
   out_6925511053866020455[406] = 0;
   out_6925511053866020455[407] = 0;
   out_6925511053866020455[408] = 0;
   out_6925511053866020455[409] = 0;
   out_6925511053866020455[410] = 0;
   out_6925511053866020455[411] = 0;
   out_6925511053866020455[412] = 0;
   out_6925511053866020455[413] = 0;
   out_6925511053866020455[414] = 0;
   out_6925511053866020455[415] = 0;
   out_6925511053866020455[416] = 0;
   out_6925511053866020455[417] = 0;
   out_6925511053866020455[418] = 1;
   out_6925511053866020455[419] = 0;
   out_6925511053866020455[420] = 0;
   out_6925511053866020455[421] = 0;
   out_6925511053866020455[422] = 0;
   out_6925511053866020455[423] = 0;
   out_6925511053866020455[424] = 0;
   out_6925511053866020455[425] = 0;
   out_6925511053866020455[426] = 0;
   out_6925511053866020455[427] = 0;
   out_6925511053866020455[428] = 0;
   out_6925511053866020455[429] = 0;
   out_6925511053866020455[430] = 0;
   out_6925511053866020455[431] = 0;
   out_6925511053866020455[432] = 0;
   out_6925511053866020455[433] = 0;
   out_6925511053866020455[434] = 0;
   out_6925511053866020455[435] = 0;
   out_6925511053866020455[436] = 0;
   out_6925511053866020455[437] = 0;
   out_6925511053866020455[438] = 0;
   out_6925511053866020455[439] = 0;
   out_6925511053866020455[440] = 1;
}
void h_4(double *state, double *unused, double *out_6466845048239706322) {
   out_6466845048239706322[0] = state[10] + state[13];
   out_6466845048239706322[1] = state[11] + state[14];
   out_6466845048239706322[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_407181918403328470) {
   out_407181918403328470[0] = 0;
   out_407181918403328470[1] = 0;
   out_407181918403328470[2] = 0;
   out_407181918403328470[3] = 0;
   out_407181918403328470[4] = 0;
   out_407181918403328470[5] = 0;
   out_407181918403328470[6] = 0;
   out_407181918403328470[7] = 0;
   out_407181918403328470[8] = 0;
   out_407181918403328470[9] = 0;
   out_407181918403328470[10] = 1;
   out_407181918403328470[11] = 0;
   out_407181918403328470[12] = 0;
   out_407181918403328470[13] = 1;
   out_407181918403328470[14] = 0;
   out_407181918403328470[15] = 0;
   out_407181918403328470[16] = 0;
   out_407181918403328470[17] = 0;
   out_407181918403328470[18] = 0;
   out_407181918403328470[19] = 0;
   out_407181918403328470[20] = 0;
   out_407181918403328470[21] = 0;
   out_407181918403328470[22] = 0;
   out_407181918403328470[23] = 0;
   out_407181918403328470[24] = 0;
   out_407181918403328470[25] = 0;
   out_407181918403328470[26] = 0;
   out_407181918403328470[27] = 0;
   out_407181918403328470[28] = 0;
   out_407181918403328470[29] = 0;
   out_407181918403328470[30] = 0;
   out_407181918403328470[31] = 0;
   out_407181918403328470[32] = 0;
   out_407181918403328470[33] = 1;
   out_407181918403328470[34] = 0;
   out_407181918403328470[35] = 0;
   out_407181918403328470[36] = 1;
   out_407181918403328470[37] = 0;
   out_407181918403328470[38] = 0;
   out_407181918403328470[39] = 0;
   out_407181918403328470[40] = 0;
   out_407181918403328470[41] = 0;
   out_407181918403328470[42] = 0;
   out_407181918403328470[43] = 0;
   out_407181918403328470[44] = 0;
   out_407181918403328470[45] = 0;
   out_407181918403328470[46] = 0;
   out_407181918403328470[47] = 0;
   out_407181918403328470[48] = 0;
   out_407181918403328470[49] = 0;
   out_407181918403328470[50] = 0;
   out_407181918403328470[51] = 0;
   out_407181918403328470[52] = 0;
   out_407181918403328470[53] = 0;
   out_407181918403328470[54] = 0;
   out_407181918403328470[55] = 0;
   out_407181918403328470[56] = 1;
   out_407181918403328470[57] = 0;
   out_407181918403328470[58] = 0;
   out_407181918403328470[59] = 1;
   out_407181918403328470[60] = 0;
   out_407181918403328470[61] = 0;
   out_407181918403328470[62] = 0;
   out_407181918403328470[63] = 0;
   out_407181918403328470[64] = 0;
   out_407181918403328470[65] = 0;
}
void h_9(double *state, double *unused, double *out_749653915449883533) {
   out_749653915449883533[0] = state[10];
   out_749653915449883533[1] = state[11];
   out_749653915449883533[2] = state[12];
}
void H_9(double *state, double *unused, double *out_648371565032919115) {
   out_648371565032919115[0] = 0;
   out_648371565032919115[1] = 0;
   out_648371565032919115[2] = 0;
   out_648371565032919115[3] = 0;
   out_648371565032919115[4] = 0;
   out_648371565032919115[5] = 0;
   out_648371565032919115[6] = 0;
   out_648371565032919115[7] = 0;
   out_648371565032919115[8] = 0;
   out_648371565032919115[9] = 0;
   out_648371565032919115[10] = 1;
   out_648371565032919115[11] = 0;
   out_648371565032919115[12] = 0;
   out_648371565032919115[13] = 0;
   out_648371565032919115[14] = 0;
   out_648371565032919115[15] = 0;
   out_648371565032919115[16] = 0;
   out_648371565032919115[17] = 0;
   out_648371565032919115[18] = 0;
   out_648371565032919115[19] = 0;
   out_648371565032919115[20] = 0;
   out_648371565032919115[21] = 0;
   out_648371565032919115[22] = 0;
   out_648371565032919115[23] = 0;
   out_648371565032919115[24] = 0;
   out_648371565032919115[25] = 0;
   out_648371565032919115[26] = 0;
   out_648371565032919115[27] = 0;
   out_648371565032919115[28] = 0;
   out_648371565032919115[29] = 0;
   out_648371565032919115[30] = 0;
   out_648371565032919115[31] = 0;
   out_648371565032919115[32] = 0;
   out_648371565032919115[33] = 1;
   out_648371565032919115[34] = 0;
   out_648371565032919115[35] = 0;
   out_648371565032919115[36] = 0;
   out_648371565032919115[37] = 0;
   out_648371565032919115[38] = 0;
   out_648371565032919115[39] = 0;
   out_648371565032919115[40] = 0;
   out_648371565032919115[41] = 0;
   out_648371565032919115[42] = 0;
   out_648371565032919115[43] = 0;
   out_648371565032919115[44] = 0;
   out_648371565032919115[45] = 0;
   out_648371565032919115[46] = 0;
   out_648371565032919115[47] = 0;
   out_648371565032919115[48] = 0;
   out_648371565032919115[49] = 0;
   out_648371565032919115[50] = 0;
   out_648371565032919115[51] = 0;
   out_648371565032919115[52] = 0;
   out_648371565032919115[53] = 0;
   out_648371565032919115[54] = 0;
   out_648371565032919115[55] = 0;
   out_648371565032919115[56] = 1;
   out_648371565032919115[57] = 0;
   out_648371565032919115[58] = 0;
   out_648371565032919115[59] = 0;
   out_648371565032919115[60] = 0;
   out_648371565032919115[61] = 0;
   out_648371565032919115[62] = 0;
   out_648371565032919115[63] = 0;
   out_648371565032919115[64] = 0;
   out_648371565032919115[65] = 0;
}
void h_10(double *state, double *unused, double *out_8534172667793870162) {
   out_8534172667793870162[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8534172667793870162[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8534172667793870162[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4975612423287271250) {
   out_4975612423287271250[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4975612423287271250[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4975612423287271250[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4975612423287271250[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4975612423287271250[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4975612423287271250[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4975612423287271250[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4975612423287271250[7] = 0;
   out_4975612423287271250[8] = 0;
   out_4975612423287271250[9] = 0;
   out_4975612423287271250[10] = 0;
   out_4975612423287271250[11] = 0;
   out_4975612423287271250[12] = 0;
   out_4975612423287271250[13] = 0;
   out_4975612423287271250[14] = 0;
   out_4975612423287271250[15] = 0;
   out_4975612423287271250[16] = 1;
   out_4975612423287271250[17] = 0;
   out_4975612423287271250[18] = 0;
   out_4975612423287271250[19] = 1;
   out_4975612423287271250[20] = 0;
   out_4975612423287271250[21] = 0;
   out_4975612423287271250[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4975612423287271250[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4975612423287271250[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4975612423287271250[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4975612423287271250[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4975612423287271250[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4975612423287271250[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4975612423287271250[29] = 0;
   out_4975612423287271250[30] = 0;
   out_4975612423287271250[31] = 0;
   out_4975612423287271250[32] = 0;
   out_4975612423287271250[33] = 0;
   out_4975612423287271250[34] = 0;
   out_4975612423287271250[35] = 0;
   out_4975612423287271250[36] = 0;
   out_4975612423287271250[37] = 0;
   out_4975612423287271250[38] = 0;
   out_4975612423287271250[39] = 1;
   out_4975612423287271250[40] = 0;
   out_4975612423287271250[41] = 0;
   out_4975612423287271250[42] = 1;
   out_4975612423287271250[43] = 0;
   out_4975612423287271250[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4975612423287271250[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4975612423287271250[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4975612423287271250[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4975612423287271250[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4975612423287271250[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4975612423287271250[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4975612423287271250[51] = 0;
   out_4975612423287271250[52] = 0;
   out_4975612423287271250[53] = 0;
   out_4975612423287271250[54] = 0;
   out_4975612423287271250[55] = 0;
   out_4975612423287271250[56] = 0;
   out_4975612423287271250[57] = 0;
   out_4975612423287271250[58] = 0;
   out_4975612423287271250[59] = 0;
   out_4975612423287271250[60] = 0;
   out_4975612423287271250[61] = 0;
   out_4975612423287271250[62] = 1;
   out_4975612423287271250[63] = 0;
   out_4975612423287271250[64] = 0;
   out_4975612423287271250[65] = 1;
}
void h_12(double *state, double *unused, double *out_6515126630711997761) {
   out_6515126630711997761[0] = state[0];
   out_6515126630711997761[1] = state[1];
   out_6515126630711997761[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5426638326435290265) {
   out_5426638326435290265[0] = 1;
   out_5426638326435290265[1] = 0;
   out_5426638326435290265[2] = 0;
   out_5426638326435290265[3] = 0;
   out_5426638326435290265[4] = 0;
   out_5426638326435290265[5] = 0;
   out_5426638326435290265[6] = 0;
   out_5426638326435290265[7] = 0;
   out_5426638326435290265[8] = 0;
   out_5426638326435290265[9] = 0;
   out_5426638326435290265[10] = 0;
   out_5426638326435290265[11] = 0;
   out_5426638326435290265[12] = 0;
   out_5426638326435290265[13] = 0;
   out_5426638326435290265[14] = 0;
   out_5426638326435290265[15] = 0;
   out_5426638326435290265[16] = 0;
   out_5426638326435290265[17] = 0;
   out_5426638326435290265[18] = 0;
   out_5426638326435290265[19] = 0;
   out_5426638326435290265[20] = 0;
   out_5426638326435290265[21] = 0;
   out_5426638326435290265[22] = 0;
   out_5426638326435290265[23] = 1;
   out_5426638326435290265[24] = 0;
   out_5426638326435290265[25] = 0;
   out_5426638326435290265[26] = 0;
   out_5426638326435290265[27] = 0;
   out_5426638326435290265[28] = 0;
   out_5426638326435290265[29] = 0;
   out_5426638326435290265[30] = 0;
   out_5426638326435290265[31] = 0;
   out_5426638326435290265[32] = 0;
   out_5426638326435290265[33] = 0;
   out_5426638326435290265[34] = 0;
   out_5426638326435290265[35] = 0;
   out_5426638326435290265[36] = 0;
   out_5426638326435290265[37] = 0;
   out_5426638326435290265[38] = 0;
   out_5426638326435290265[39] = 0;
   out_5426638326435290265[40] = 0;
   out_5426638326435290265[41] = 0;
   out_5426638326435290265[42] = 0;
   out_5426638326435290265[43] = 0;
   out_5426638326435290265[44] = 0;
   out_5426638326435290265[45] = 0;
   out_5426638326435290265[46] = 1;
   out_5426638326435290265[47] = 0;
   out_5426638326435290265[48] = 0;
   out_5426638326435290265[49] = 0;
   out_5426638326435290265[50] = 0;
   out_5426638326435290265[51] = 0;
   out_5426638326435290265[52] = 0;
   out_5426638326435290265[53] = 0;
   out_5426638326435290265[54] = 0;
   out_5426638326435290265[55] = 0;
   out_5426638326435290265[56] = 0;
   out_5426638326435290265[57] = 0;
   out_5426638326435290265[58] = 0;
   out_5426638326435290265[59] = 0;
   out_5426638326435290265[60] = 0;
   out_5426638326435290265[61] = 0;
   out_5426638326435290265[62] = 0;
   out_5426638326435290265[63] = 0;
   out_5426638326435290265[64] = 0;
   out_5426638326435290265[65] = 0;
}
void h_35(double *state, double *unused, double *out_7782822813653033061) {
   out_7782822813653033061[0] = state[7];
   out_7782822813653033061[1] = state[8];
   out_7782822813653033061[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3773843975775935846) {
   out_3773843975775935846[0] = 0;
   out_3773843975775935846[1] = 0;
   out_3773843975775935846[2] = 0;
   out_3773843975775935846[3] = 0;
   out_3773843975775935846[4] = 0;
   out_3773843975775935846[5] = 0;
   out_3773843975775935846[6] = 0;
   out_3773843975775935846[7] = 1;
   out_3773843975775935846[8] = 0;
   out_3773843975775935846[9] = 0;
   out_3773843975775935846[10] = 0;
   out_3773843975775935846[11] = 0;
   out_3773843975775935846[12] = 0;
   out_3773843975775935846[13] = 0;
   out_3773843975775935846[14] = 0;
   out_3773843975775935846[15] = 0;
   out_3773843975775935846[16] = 0;
   out_3773843975775935846[17] = 0;
   out_3773843975775935846[18] = 0;
   out_3773843975775935846[19] = 0;
   out_3773843975775935846[20] = 0;
   out_3773843975775935846[21] = 0;
   out_3773843975775935846[22] = 0;
   out_3773843975775935846[23] = 0;
   out_3773843975775935846[24] = 0;
   out_3773843975775935846[25] = 0;
   out_3773843975775935846[26] = 0;
   out_3773843975775935846[27] = 0;
   out_3773843975775935846[28] = 0;
   out_3773843975775935846[29] = 0;
   out_3773843975775935846[30] = 1;
   out_3773843975775935846[31] = 0;
   out_3773843975775935846[32] = 0;
   out_3773843975775935846[33] = 0;
   out_3773843975775935846[34] = 0;
   out_3773843975775935846[35] = 0;
   out_3773843975775935846[36] = 0;
   out_3773843975775935846[37] = 0;
   out_3773843975775935846[38] = 0;
   out_3773843975775935846[39] = 0;
   out_3773843975775935846[40] = 0;
   out_3773843975775935846[41] = 0;
   out_3773843975775935846[42] = 0;
   out_3773843975775935846[43] = 0;
   out_3773843975775935846[44] = 0;
   out_3773843975775935846[45] = 0;
   out_3773843975775935846[46] = 0;
   out_3773843975775935846[47] = 0;
   out_3773843975775935846[48] = 0;
   out_3773843975775935846[49] = 0;
   out_3773843975775935846[50] = 0;
   out_3773843975775935846[51] = 0;
   out_3773843975775935846[52] = 0;
   out_3773843975775935846[53] = 1;
   out_3773843975775935846[54] = 0;
   out_3773843975775935846[55] = 0;
   out_3773843975775935846[56] = 0;
   out_3773843975775935846[57] = 0;
   out_3773843975775935846[58] = 0;
   out_3773843975775935846[59] = 0;
   out_3773843975775935846[60] = 0;
   out_3773843975775935846[61] = 0;
   out_3773843975775935846[62] = 0;
   out_3773843975775935846[63] = 0;
   out_3773843975775935846[64] = 0;
   out_3773843975775935846[65] = 0;
}
void h_32(double *state, double *unused, double *out_108926050794950082) {
   out_108926050794950082[0] = state[3];
   out_108926050794950082[1] = state[4];
   out_108926050794950082[2] = state[5];
   out_108926050794950082[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3141020527918180510) {
   out_3141020527918180510[0] = 0;
   out_3141020527918180510[1] = 0;
   out_3141020527918180510[2] = 0;
   out_3141020527918180510[3] = 1;
   out_3141020527918180510[4] = 0;
   out_3141020527918180510[5] = 0;
   out_3141020527918180510[6] = 0;
   out_3141020527918180510[7] = 0;
   out_3141020527918180510[8] = 0;
   out_3141020527918180510[9] = 0;
   out_3141020527918180510[10] = 0;
   out_3141020527918180510[11] = 0;
   out_3141020527918180510[12] = 0;
   out_3141020527918180510[13] = 0;
   out_3141020527918180510[14] = 0;
   out_3141020527918180510[15] = 0;
   out_3141020527918180510[16] = 0;
   out_3141020527918180510[17] = 0;
   out_3141020527918180510[18] = 0;
   out_3141020527918180510[19] = 0;
   out_3141020527918180510[20] = 0;
   out_3141020527918180510[21] = 0;
   out_3141020527918180510[22] = 0;
   out_3141020527918180510[23] = 0;
   out_3141020527918180510[24] = 0;
   out_3141020527918180510[25] = 0;
   out_3141020527918180510[26] = 1;
   out_3141020527918180510[27] = 0;
   out_3141020527918180510[28] = 0;
   out_3141020527918180510[29] = 0;
   out_3141020527918180510[30] = 0;
   out_3141020527918180510[31] = 0;
   out_3141020527918180510[32] = 0;
   out_3141020527918180510[33] = 0;
   out_3141020527918180510[34] = 0;
   out_3141020527918180510[35] = 0;
   out_3141020527918180510[36] = 0;
   out_3141020527918180510[37] = 0;
   out_3141020527918180510[38] = 0;
   out_3141020527918180510[39] = 0;
   out_3141020527918180510[40] = 0;
   out_3141020527918180510[41] = 0;
   out_3141020527918180510[42] = 0;
   out_3141020527918180510[43] = 0;
   out_3141020527918180510[44] = 0;
   out_3141020527918180510[45] = 0;
   out_3141020527918180510[46] = 0;
   out_3141020527918180510[47] = 0;
   out_3141020527918180510[48] = 0;
   out_3141020527918180510[49] = 1;
   out_3141020527918180510[50] = 0;
   out_3141020527918180510[51] = 0;
   out_3141020527918180510[52] = 0;
   out_3141020527918180510[53] = 0;
   out_3141020527918180510[54] = 0;
   out_3141020527918180510[55] = 0;
   out_3141020527918180510[56] = 0;
   out_3141020527918180510[57] = 0;
   out_3141020527918180510[58] = 0;
   out_3141020527918180510[59] = 0;
   out_3141020527918180510[60] = 0;
   out_3141020527918180510[61] = 0;
   out_3141020527918180510[62] = 0;
   out_3141020527918180510[63] = 0;
   out_3141020527918180510[64] = 0;
   out_3141020527918180510[65] = 0;
   out_3141020527918180510[66] = 0;
   out_3141020527918180510[67] = 0;
   out_3141020527918180510[68] = 0;
   out_3141020527918180510[69] = 0;
   out_3141020527918180510[70] = 0;
   out_3141020527918180510[71] = 0;
   out_3141020527918180510[72] = 1;
   out_3141020527918180510[73] = 0;
   out_3141020527918180510[74] = 0;
   out_3141020527918180510[75] = 0;
   out_3141020527918180510[76] = 0;
   out_3141020527918180510[77] = 0;
   out_3141020527918180510[78] = 0;
   out_3141020527918180510[79] = 0;
   out_3141020527918180510[80] = 0;
   out_3141020527918180510[81] = 0;
   out_3141020527918180510[82] = 0;
   out_3141020527918180510[83] = 0;
   out_3141020527918180510[84] = 0;
   out_3141020527918180510[85] = 0;
   out_3141020527918180510[86] = 0;
   out_3141020527918180510[87] = 0;
}
void h_13(double *state, double *unused, double *out_2871024965946799999) {
   out_2871024965946799999[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2871024965946799999[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2871024965946799999[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5162091226028516826) {
   out_5162091226028516826[0] = 0;
   out_5162091226028516826[1] = 0;
   out_5162091226028516826[2] = 0;
   out_5162091226028516826[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5162091226028516826[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5162091226028516826[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5162091226028516826[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5162091226028516826[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5162091226028516826[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5162091226028516826[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5162091226028516826[10] = 0;
   out_5162091226028516826[11] = 0;
   out_5162091226028516826[12] = 0;
   out_5162091226028516826[13] = 0;
   out_5162091226028516826[14] = 0;
   out_5162091226028516826[15] = 0;
   out_5162091226028516826[16] = 0;
   out_5162091226028516826[17] = 0;
   out_5162091226028516826[18] = 0;
   out_5162091226028516826[19] = 0;
   out_5162091226028516826[20] = 0;
   out_5162091226028516826[21] = 0;
   out_5162091226028516826[22] = 0;
   out_5162091226028516826[23] = 0;
   out_5162091226028516826[24] = 0;
   out_5162091226028516826[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5162091226028516826[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5162091226028516826[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5162091226028516826[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5162091226028516826[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5162091226028516826[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5162091226028516826[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5162091226028516826[32] = 0;
   out_5162091226028516826[33] = 0;
   out_5162091226028516826[34] = 0;
   out_5162091226028516826[35] = 0;
   out_5162091226028516826[36] = 0;
   out_5162091226028516826[37] = 0;
   out_5162091226028516826[38] = 0;
   out_5162091226028516826[39] = 0;
   out_5162091226028516826[40] = 0;
   out_5162091226028516826[41] = 0;
   out_5162091226028516826[42] = 0;
   out_5162091226028516826[43] = 0;
   out_5162091226028516826[44] = 0;
   out_5162091226028516826[45] = 0;
   out_5162091226028516826[46] = 0;
   out_5162091226028516826[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5162091226028516826[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5162091226028516826[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5162091226028516826[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5162091226028516826[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5162091226028516826[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5162091226028516826[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5162091226028516826[54] = 0;
   out_5162091226028516826[55] = 0;
   out_5162091226028516826[56] = 0;
   out_5162091226028516826[57] = 0;
   out_5162091226028516826[58] = 0;
   out_5162091226028516826[59] = 0;
   out_5162091226028516826[60] = 0;
   out_5162091226028516826[61] = 0;
   out_5162091226028516826[62] = 0;
   out_5162091226028516826[63] = 0;
   out_5162091226028516826[64] = 0;
   out_5162091226028516826[65] = 0;
}
void h_14(double *state, double *unused, double *out_749653915449883533) {
   out_749653915449883533[0] = state[10];
   out_749653915449883533[1] = state[11];
   out_749653915449883533[2] = state[12];
}
void H_14(double *state, double *unused, double *out_648371565032919115) {
   out_648371565032919115[0] = 0;
   out_648371565032919115[1] = 0;
   out_648371565032919115[2] = 0;
   out_648371565032919115[3] = 0;
   out_648371565032919115[4] = 0;
   out_648371565032919115[5] = 0;
   out_648371565032919115[6] = 0;
   out_648371565032919115[7] = 0;
   out_648371565032919115[8] = 0;
   out_648371565032919115[9] = 0;
   out_648371565032919115[10] = 1;
   out_648371565032919115[11] = 0;
   out_648371565032919115[12] = 0;
   out_648371565032919115[13] = 0;
   out_648371565032919115[14] = 0;
   out_648371565032919115[15] = 0;
   out_648371565032919115[16] = 0;
   out_648371565032919115[17] = 0;
   out_648371565032919115[18] = 0;
   out_648371565032919115[19] = 0;
   out_648371565032919115[20] = 0;
   out_648371565032919115[21] = 0;
   out_648371565032919115[22] = 0;
   out_648371565032919115[23] = 0;
   out_648371565032919115[24] = 0;
   out_648371565032919115[25] = 0;
   out_648371565032919115[26] = 0;
   out_648371565032919115[27] = 0;
   out_648371565032919115[28] = 0;
   out_648371565032919115[29] = 0;
   out_648371565032919115[30] = 0;
   out_648371565032919115[31] = 0;
   out_648371565032919115[32] = 0;
   out_648371565032919115[33] = 1;
   out_648371565032919115[34] = 0;
   out_648371565032919115[35] = 0;
   out_648371565032919115[36] = 0;
   out_648371565032919115[37] = 0;
   out_648371565032919115[38] = 0;
   out_648371565032919115[39] = 0;
   out_648371565032919115[40] = 0;
   out_648371565032919115[41] = 0;
   out_648371565032919115[42] = 0;
   out_648371565032919115[43] = 0;
   out_648371565032919115[44] = 0;
   out_648371565032919115[45] = 0;
   out_648371565032919115[46] = 0;
   out_648371565032919115[47] = 0;
   out_648371565032919115[48] = 0;
   out_648371565032919115[49] = 0;
   out_648371565032919115[50] = 0;
   out_648371565032919115[51] = 0;
   out_648371565032919115[52] = 0;
   out_648371565032919115[53] = 0;
   out_648371565032919115[54] = 0;
   out_648371565032919115[55] = 0;
   out_648371565032919115[56] = 1;
   out_648371565032919115[57] = 0;
   out_648371565032919115[58] = 0;
   out_648371565032919115[59] = 0;
   out_648371565032919115[60] = 0;
   out_648371565032919115[61] = 0;
   out_648371565032919115[62] = 0;
   out_648371565032919115[63] = 0;
   out_648371565032919115[64] = 0;
   out_648371565032919115[65] = 0;
}
void h_33(double *state, double *unused, double *out_6040282944703340401) {
   out_6040282944703340401[0] = state[16];
   out_6040282944703340401[1] = state[17];
   out_6040282944703340401[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6924400980414793450) {
   out_6924400980414793450[0] = 0;
   out_6924400980414793450[1] = 0;
   out_6924400980414793450[2] = 0;
   out_6924400980414793450[3] = 0;
   out_6924400980414793450[4] = 0;
   out_6924400980414793450[5] = 0;
   out_6924400980414793450[6] = 0;
   out_6924400980414793450[7] = 0;
   out_6924400980414793450[8] = 0;
   out_6924400980414793450[9] = 0;
   out_6924400980414793450[10] = 0;
   out_6924400980414793450[11] = 0;
   out_6924400980414793450[12] = 0;
   out_6924400980414793450[13] = 0;
   out_6924400980414793450[14] = 0;
   out_6924400980414793450[15] = 0;
   out_6924400980414793450[16] = 1;
   out_6924400980414793450[17] = 0;
   out_6924400980414793450[18] = 0;
   out_6924400980414793450[19] = 0;
   out_6924400980414793450[20] = 0;
   out_6924400980414793450[21] = 0;
   out_6924400980414793450[22] = 0;
   out_6924400980414793450[23] = 0;
   out_6924400980414793450[24] = 0;
   out_6924400980414793450[25] = 0;
   out_6924400980414793450[26] = 0;
   out_6924400980414793450[27] = 0;
   out_6924400980414793450[28] = 0;
   out_6924400980414793450[29] = 0;
   out_6924400980414793450[30] = 0;
   out_6924400980414793450[31] = 0;
   out_6924400980414793450[32] = 0;
   out_6924400980414793450[33] = 0;
   out_6924400980414793450[34] = 0;
   out_6924400980414793450[35] = 0;
   out_6924400980414793450[36] = 0;
   out_6924400980414793450[37] = 0;
   out_6924400980414793450[38] = 0;
   out_6924400980414793450[39] = 1;
   out_6924400980414793450[40] = 0;
   out_6924400980414793450[41] = 0;
   out_6924400980414793450[42] = 0;
   out_6924400980414793450[43] = 0;
   out_6924400980414793450[44] = 0;
   out_6924400980414793450[45] = 0;
   out_6924400980414793450[46] = 0;
   out_6924400980414793450[47] = 0;
   out_6924400980414793450[48] = 0;
   out_6924400980414793450[49] = 0;
   out_6924400980414793450[50] = 0;
   out_6924400980414793450[51] = 0;
   out_6924400980414793450[52] = 0;
   out_6924400980414793450[53] = 0;
   out_6924400980414793450[54] = 0;
   out_6924400980414793450[55] = 0;
   out_6924400980414793450[56] = 0;
   out_6924400980414793450[57] = 0;
   out_6924400980414793450[58] = 0;
   out_6924400980414793450[59] = 0;
   out_6924400980414793450[60] = 0;
   out_6924400980414793450[61] = 0;
   out_6924400980414793450[62] = 1;
   out_6924400980414793450[63] = 0;
   out_6924400980414793450[64] = 0;
   out_6924400980414793450[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8035984677720566691) {
  H(in_vec, out_8035984677720566691);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8420573368845911328) {
  err_fun(nom_x, delta_x, out_8420573368845911328);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6777199985856691982) {
  inv_err_fun(nom_x, true_x, out_6777199985856691982);
}
void live_H_mod_fun(double *state, double *out_7266160212655929723) {
  H_mod_fun(state, out_7266160212655929723);
}
void live_f_fun(double *state, double dt, double *out_685833055220742968) {
  f_fun(state,  dt, out_685833055220742968);
}
void live_F_fun(double *state, double dt, double *out_6925511053866020455) {
  F_fun(state,  dt, out_6925511053866020455);
}
void live_h_4(double *state, double *unused, double *out_6466845048239706322) {
  h_4(state, unused, out_6466845048239706322);
}
void live_H_4(double *state, double *unused, double *out_407181918403328470) {
  H_4(state, unused, out_407181918403328470);
}
void live_h_9(double *state, double *unused, double *out_749653915449883533) {
  h_9(state, unused, out_749653915449883533);
}
void live_H_9(double *state, double *unused, double *out_648371565032919115) {
  H_9(state, unused, out_648371565032919115);
}
void live_h_10(double *state, double *unused, double *out_8534172667793870162) {
  h_10(state, unused, out_8534172667793870162);
}
void live_H_10(double *state, double *unused, double *out_4975612423287271250) {
  H_10(state, unused, out_4975612423287271250);
}
void live_h_12(double *state, double *unused, double *out_6515126630711997761) {
  h_12(state, unused, out_6515126630711997761);
}
void live_H_12(double *state, double *unused, double *out_5426638326435290265) {
  H_12(state, unused, out_5426638326435290265);
}
void live_h_35(double *state, double *unused, double *out_7782822813653033061) {
  h_35(state, unused, out_7782822813653033061);
}
void live_H_35(double *state, double *unused, double *out_3773843975775935846) {
  H_35(state, unused, out_3773843975775935846);
}
void live_h_32(double *state, double *unused, double *out_108926050794950082) {
  h_32(state, unused, out_108926050794950082);
}
void live_H_32(double *state, double *unused, double *out_3141020527918180510) {
  H_32(state, unused, out_3141020527918180510);
}
void live_h_13(double *state, double *unused, double *out_2871024965946799999) {
  h_13(state, unused, out_2871024965946799999);
}
void live_H_13(double *state, double *unused, double *out_5162091226028516826) {
  H_13(state, unused, out_5162091226028516826);
}
void live_h_14(double *state, double *unused, double *out_749653915449883533) {
  h_14(state, unused, out_749653915449883533);
}
void live_H_14(double *state, double *unused, double *out_648371565032919115) {
  H_14(state, unused, out_648371565032919115);
}
void live_h_33(double *state, double *unused, double *out_6040282944703340401) {
  h_33(state, unused, out_6040282944703340401);
}
void live_H_33(double *state, double *unused, double *out_6924400980414793450) {
  H_33(state, unused, out_6924400980414793450);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
